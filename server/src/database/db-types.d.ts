/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Categories = "Academic/Networking" | "Animals" | "Arc" | "Arts (Humanities)" | "Arts & Culture" | "Business" | "Charity/Community Service" | "Child/Youth" | "Create Arts" | "Education" | "Elderly" | "Engineering" | "Environment" | "Food" | "Fundraising" | "Games" | "Health" | "Hobby" | "Indigenous" | "International/Cultural" | "Making" | "Other" | "Performance" | "Political" | "Refugees" | "Religious/Spiritual" | "Science" | "Social" | "Social Welfare" | "Sport" | "Sports" | "Technology" | "Volunteer - Campus" | "Volunteer - Community" | "Volunteer - Event" | "Volunteer Organisation";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type SocialMediaType = "DISCORD" | "FACEBOOK" | "INSTAGRAM" | "LINKEDIN" | "OTHER" | "YOUTUBE";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Event {
  coverImageUrl: string | null;
  description: string | null;
  endDate: Timestamp;
  id: Generated<string>;
  lookingForSponsors: Generated<boolean>;
  name: string;
  startDate: Timestamp;
}

export interface EventHost {
  eventId: string;
  societyId: string;
}

export interface EventSponsorship {
  eventId: string;
  sponsorId: string;
}

export interface SocialMedia {
  id: Generated<number>;
  societyId: string;
  type: SocialMediaType;
  url: string;
}

export interface Society {
  contactEmail: string | null;
  description: string | null;
  id: Generated<string>;
  isApproved: Generated<boolean>;
  isSuperAdmin: Generated<boolean>;
  loginEmail: string | null;
  logoUrl: string | null;
  memberCount: number | null;
  name: string;
}

export interface SocietyCategory {
  category: Categories;
  id: Generated<number>;
  societyId: string;
}

export interface SocietySponsorship {
  societyId: string;
  sponsorId: string;
}

export interface Sponsor {
  id: Generated<string>;
  logoUrl: string | null;
  name: string;
  website: string | null;
}

export interface DB {
  event: Event;
  eventHost: EventHost;
  eventSponsorship: EventSponsorship;
  socialMedia: SocialMedia;
  society: Society;
  societyCategory: SocietyCategory;
  societySponsorship: SocietySponsorship;
  sponsor: Sponsor;
}
